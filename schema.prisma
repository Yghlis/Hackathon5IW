// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Project {
  id          Int      @id @default(autoincrement())
  nom         String   // Nom du projet/entreprise/site web
  description String   // Description complète de l'activité, des objectifs et du public cible
  couleur     String   // Couleur principale choisie (nom ou code hex)
  style       Style    // Style de design choisi
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  pages       Page[]
  generations Generation[]
  
  @@map("projects")
}

model Page {
  id          Int      @id @default(autoincrement())
  numero      Int      // Numéro de la page (1, 2, 3, etc.)
  nom         String   // Nom/titre de la page (ex: Accueil, À propos, Contact)
  description String   // Description de ce que fait cette page et son contenu
  sections    String[] // Sections principales de cette page (hero, services, témoignages, etc.)
  
  // Relation avec le projet
  projectId   Int
  project     Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@map("pages")
  @@unique([projectId, numero]) // Un projet ne peut pas avoir deux pages avec le même numéro
}

enum Style {
  modern       // Moderne & Minimaliste
  creative     // Créatif & Artistique  
  professional // Professionnel & Corporate
  elegant      // Élégant & Luxe
  fun          // Ludique & Dynamique
  natural      // Naturel & Organic
}

// Modèle pour stocker les informations de génération
model Generation {
  id          Int      @id @default(autoincrement())
  projectId   Int
  project     Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  
  fileName    String   // Nom du fichier généré
  filePath    String   // Chemin complet du fichier
  colorScheme Json     // Palette de couleurs générée (JSON)
  
  createdAt   DateTime @default(now())
  
  @@map("generations")
} 